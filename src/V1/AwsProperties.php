<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/bigquery/connection/v1/connection.proto

namespace Google\Cloud\BigQuery\Connection\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Connection properties specific to Amazon Web Services (AWS).
 *
 * Generated from protobuf message <code>google.cloud.bigquery.connection.v1.AwsProperties</code>
 */
class AwsProperties extends \Google\Protobuf\Internal\Message
{
    protected $authentication_method;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\BigQuery\Connection\V1\AwsCrossAccountRole $cross_account_role
     *           Authentication using Google owned AWS IAM user's access key to assume
     *           into customer's AWS IAM Role.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Bigquery\Connection\V1\Connection::initOnce();
        parent::__construct($data);
    }

    /**
     * Authentication using Google owned AWS IAM user's access key to assume
     * into customer's AWS IAM Role.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.connection.v1.AwsCrossAccountRole cross_account_role = 2;</code>
     * @return \Google\Cloud\BigQuery\Connection\V1\AwsCrossAccountRole|null
     */
    public function getCrossAccountRole()
    {
        return $this->readOneof(2);
    }

    public function hasCrossAccountRole()
    {
        return $this->hasOneof(2);
    }

    /**
     * Authentication using Google owned AWS IAM user's access key to assume
     * into customer's AWS IAM Role.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.connection.v1.AwsCrossAccountRole cross_account_role = 2;</code>
     * @param \Google\Cloud\BigQuery\Connection\V1\AwsCrossAccountRole $var
     * @return $this
     */
    public function setCrossAccountRole($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\BigQuery\Connection\V1\AwsCrossAccountRole::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getAuthenticationMethod()
    {
        return $this->whichOneof("authentication_method");
    }

}

